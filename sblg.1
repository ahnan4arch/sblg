.\"	$Id$
.\"
.\" Copyright (c) 2013 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: September 15 2013 $
.Dt SBLG 1
.Os
.Sh NAME
.Nm sblg
.Nd simple off-line blog utility
.Sh SYNOPSIS
.Nm sblg
.Op Fl f Ar file
.Op Fl o Ar file
.Op Fl t Ar templ
.Op Fl ac
.Ar
.Sh DESCRIPTION
The
.Nm
utility knits together HTML5 articles into a blog-like collection of
HTML5 files.
The calling conventions follow that of
.Xr cc 1
for easier integration into Makefiles: specifying
.Fl c
produces a stand-alone, formatted HTML5 article page from input files;
whereas running without
.Fl c
will link together previously-formatted HTML5 articles to create a front
page.
As an extension,
.Fl a
creates an Atom feed file from previously-formatted HTML5 articles.
.Pp
When producing standalone files with
.Fl c ,
input is assumed to be an HTML5 fragment suffixed with
.Li .xml ;
when running without
.Fl c ,
input should be a fully-formed
.Li .html
file usually as produced with
.Fl c .
.Po
It's possible to run without
.Fl c
on unformatted
.Li .xml
files\(emsee below for details.
.Pc
.Pp
The arguments are as follows:
.Bl -tag -width Ds
.It Fl f Ar file
If
.Fl a
and
.Fl c
are not specified, this causes
.Ar file
to be the only article shown regardless the number of
.Aq article
entries in the template.
Otherwise it is ignored.
.It Fl o Ar file
Output file.
If unspecified, standalone articles have their
.Li .xml
suffixes transformed into
.Li .html
unless multiple input files are specified, in which case
.Fl o
is ignored.
If unspecified for front pages,
.Ar blog.html
is used by default.
Use
.Fl o Ar \-
for standard output.
.It Fl t Ar templ
Template for standalone or front-page file.
If unspecified, defaults to
.Ar article-template.xml
for
.Fl c ,
.Ar atom-template.xml
for
.Fl a ,
and
.Ar blog-template.xml
otherwise.
.It Fl a
Creates an Atom feed instead of a standalone article
.Pq as with Fl c
or merging together articles.
.It Fl c
Create standalone articles instead of merging together articles into a
front page.
.It Ar
Input files.
In standalone mode with
.Fl c ,
input
.Li .xml
files are merged with templates into
.Li html
files.
Otherwise, input
.Li html
files are merged into a single front page.
.El
.Pp
Article input files consist of XML-syntax HTML5 fragments.
They usually consist of the following:
.Bd -literal
<article>
  <header>
    <h1>Article Name</h1>
    <address>Author Name</address>
    <time datetime="2013-06-29">29 June, 2013</time>
  </header>
  <aside>
    This is used as a feed <b>summary</b>.
  </aside>
  <p>Some text.</p>
</article>
.Ed
.Pp
When processed with
.Nm ,
all data outside of the first
.Aq article
element is discarded.
Then the article title is extracted from the first
.Aq hn
.Pq header 1\(en4
within the
.Aq header ,
article publication date is extracted from the first
.Aq time ,
and author from the first
.Aq address .
If unspecified, these default to
.Qq Untitled article ,
.Qq Unknown author ,
and the document's ctime.
The first
.Aq aside ,
if provided, is used for the feed summary.
All other content (i.e., outside of the
.Aq header
and
.Aq aside ) ,
is recorded in case the
.Li data-sblg-content
Boolean value is used in an Atom feed.
.Pp
If you're passing article fragments directly into the link or feed
.Pq Fl a
operation of
.Nm ,
include the
.Li data-sblg-article
Boolean XML attribute in the
.Aq article
declaration.
.Pp
The standalone template file must be a well-formed HTML5 file where the
first
.Aq article
element with a Boolean
.Li data-sblg-article
attribute is replaced by the article text.
All of this element's children are removed.
.Bd -literal
<body>
  <header>This consists of a single blog entry.</header>
  <article>This is kept.</article>
  <article data-sblg-article="1">This is removed.</article>
  <footer>Something.</footer>
</body>
.Ed
.Pp
The front page template file must also be a well-formed HTML5 file where
each
.Aq article
element with a Boolean
.Li data-sblg-article
attribute is replaced by ordered (newest to oldest) article text.
If there aren't enough articles, the element is removed.
Furthermore, any
.Aq nav
elements with a Boolean
.Li data-sblg-nav
attribute are replaced by a list of all available articles in an
unordered list consisting of article dates followed by the title, linked
to the page itself.
.Em Note :
if you're running
.Fl o
with raw XML files, the linked file will consist of an XML target, not
an HTML target.
However, the Boolean
.Li data-sbgl-navcontent
attribute makes the content of the
.Aq nav
element be reproduced within each list item, with the special string
.Li ${base} ,
.Li ${date} ,
.Li ${source} ,
.Li ${aside} ,
and
.Li ${title}
being replaced by the article's basename (i.e., filename with suffix
chopped off), publication date, filename, aside content, and title,
respectively.
If the
.Aq nav
element contains a positive integer
.Li data-sblg-navsz
attribute, this is used to limit the number of navigation entries.
.Bd -literal
<body>
  <header>This consists of two blog entries.</header>
  <nav data-sblg-nav="1" />
  <article data-sblg-article="1" />
  <article data-sblg-article="1" />
  <footer>Something.</footer>
</body>
.Ed
.Pp
Each
.Aq article
will be followed by a
.Pq permanent link
anchor within a
.Aq div
with the custom class
.Qq data-sblg-permlink
unless a Boolean
.Qq data-sblg-permlink
attribute is set to false.
.Pp
The Atom template file must be a well-formed XML file where each
.Aq entry
element with a Boolean
.Li data-sblg-entry
attribute is replaced by ordered (newest to oldest) article information.
If there aren't enough articles, the element is removed.
.Bd -literal
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Example Feed</title>
  <link href="http://example.org/feed/" rel="self" />
  <link href="http://example.org/" />
  <updated data-sblg-updated="1" />
  <id data-sblg-id="1" />
  <entry data-sblg-entry="1" />
  <entry data-sblg-entry="1" />
  <entry data-sblg-entry="1" />
</feed>
.Ed
.Pp
The
.Aq updated
element with a Boolean
.Li data-sblg-updated
attribute is replaced with the newest article date (or the current date,
if no articles are listed).
The
.Aq id
element with a Boolean
.Li data-sblg-id
attributed is replaced with an identifier in the form of
.Li tag:domain,2013:path ,
where the domain is initialised to the current domain or extracted from
the
.Aq link
to the self.
The path is also extracted from the self
.Aq link ,
initialised to the root path
.Sq \&/ .
.Pp
Each
.Aq entry
element with a Boolean
.Li data-sblg-entry
attribute is filled in with a
.Aq title ,
.Aq id
.Pq in tag format ,
.Aq author ,
HTML
.Aq summary
.Pq if specified in the article as an Ao aside Ac ,
and alternate
.Aq link .
If the
.Ar entry
element contains a false
.Li data-sblg-altlink
Boolean attribute, the alternate
.Aq link
is not printed.
Furthermore, if a true
.Li data-sblg-content
Boolean attribute exists, the article's contents (everything not within the first
.Aq aside
or
.Aq header
elements) are inlined within a
.Aq content
element with type
.Li html .
.Sh FILES
.Bl -tag -width Ds
.It Pa article-template.xml
Default template for creating articles with
.Fl c .
.It Pa atom-template.xml
Default template for creating atom feeds with
.Fl a .
.It Pa blog-template.xml
Default template for creating a front page.
.El
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
First, create standalone HTML5 files from article fragments.
A
.Pa article-template.xml
file is assumed to exist.
.Pp
.Dl % sblg -c article1.xml article2.xml
.Pp
Next, merge formatted files into a front page.
A
.Pa blog-template.xml
file is assumed to exist.
.Pp
.Dl % sblg -o index.html article1.html article2.html
.Sh STANDARDS
Input files and templates must be properly-formed HTML5 files using XML
syntax
Output files are guranteed to be HTML5 conforming.
The Atom file template must be well-formed; output is guaranteed to
satisfy the Atom 1.0 and Tag ID standards.
.Sh AUTHORS
The
.Nm
utility was written by
.Ar Kristaps Dzonsons ,
.Mt kristaps@bsd.lv .
.Sh CAVEATS
Boolean XML values must have an attribute specified.
In other words,
.Aq foo bar="1"
is valid, while
.Aq foo bar
is not.
